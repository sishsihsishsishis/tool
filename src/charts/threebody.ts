import { EChartsOption, LinesSeriesOption, XAXisComponentOption, YAXisComponentOption } from "echarts";
import color from "./template/color";

let data = {
  "sync":{
    "user00":[[0.0,0.1520172908454996],[30000.0,-0.051947671832203536],[60000.0,0.05614952196511798],[90000.0,0.10989830296074671],[120000.0,0.04104379775860008],[150000.0,0.006625670954949439],[180000.0,0.0634250320840056],[210000.0,-0.12456740487403031],[240000.0,-0.23220326128125424],[270000.0,-0.12731800423136344],[300000.0,-0.06804927041207348],[330000.0,0.11091101912992588],[360000.0,0.17137619448806687],[390000.0,-0.33190453113534824],[420000.0,0.2506052406414787],[450000.0,-0.10982417285348808],[480000.0,-0.030317554746968664],[510000.0,-0.026668214498519437],[540000.0,0.1263539013167197],[570000.0,-0.12287636443013858],[600000.0,0.23085351453682212],[630000.0,0.0929409906750906],[660000.0,-0.0471514558194666],[690000.0,-0.002464961990408153],[720000.0,-0.024213865648498],[750000.0,0.01743735497149812],[780000.0,0.1673953259729203],[810000.0,0.07296849033089874],[840000.0,-0.07941452380309873]],
    "user10":[[0.0,0.8589734282358817],[30000.0,1.053320622732929],[60000.0,0.9453977675897984],[90000.0,0.8959252436083942],[120000.0,0.9597870925038477],[150000.0,0.9933962304057536],[180000.0,0.9385444773868693],[210000.0,1.1326583645816173],[240000.0,1.2613760916936656],[270000.0,1.135778142614072],[300000.0,1.0704180471178089],[330000.0,0.8950183849005602],[360000.0,0.842504568272799],[390000.0,1.3936197948618054],[420000.0,0.778329563800786],[450000.0,1.1160818157249892],[480000.0,1.030781811643851],[510000.0,1.0270269935627467],[540000.0,0.8813028973312166],[570000.0,1.1307446120505125],[600000.0,0.7938557458450105],[630000.0,0.9112472707959197],[660000.0,1.0482807652794135],[690000.0,1.0024680025069546],[720000.0,1.0245094018301368],[750000.0,0.9827137958705842],[780000.0,0.8458651527669873],[810000.0,0.9296301219018294],[840000.0,1.082653014512053]],
    "user01":[[0.0,0.034115698734498226],[30000.0,-0.328136571309036],[60000.0,0.11898183076071624],[90000.0,0.0041610993012418385],[120000.0,-0.01892456426783414],[150000.0,-0.1467346736737924],[180000.0,-0.037134403635301086],[210000.0,-0.1582171250597212],[240000.0,-0.13818456886229902],[270000.0,0.07809287681378091],[300000.0,0.11186679012220829],[330000.0,0.19578988607347986],[360000.0,0.12338930131907322],[390000.0,-0.3256566886874771],[420000.0,0.32571644322360366],[450000.0,-0.2241622737657546],[480000.0,-0.028097886963089888],[510000.0,-0.02760564566289924],[540000.0,0.03305043069812519],[570000.0,0.010796852933235436],[600000.0,0.12961769335753862],[630000.0,-0.21228915872160148],[660000.0,0.09005650735994376],[690000.0,-0.037190835228045574],[720000.0,-0.06390868891571837],[750000.0,0.17242012794811012],[780000.0,-0.03360590147953359],[810000.0,0.04499208507665427],[840000.0,0.17835920545400133]],
  },
  "individual_sync_value":{
    "user00":[[0.0,0.9664596800067269],[30000.0,1.3883785720211943],[60000.0,0.8878239317008632],[90000.0,0.995847546076873],[120000.0,1.0191047688033135],[150000.0,1.1580466619977263],[180000.0,1.0378324999255226],[210000.0,1.1714205118459515],[240000.0,1.148187450369918],[270000.0,0.9248785227840367],[300000.0,0.8941633609593418],[330000.0,0.8221849690427747],[360000.0,0.8839194845494012],[390000.0,1.3849398217391335],[420000.0,0.7220098892047659],[450000.0,1.2512740519068883],[480000.0,1.028496355878959],[510000.0,1.027990212078161],[540000.0,0.967489767174337],[570000.0,0.9892612238798685],[600000.0,0.8784311968151935],[630000.0,1.2365053797045167],[660000.0,0.9138795428918792],[690000.0,1.037891068119028],[720000.0,1.0659950571528816],[750000.0,0.8416255084835365],[780000.0,1.0341769587973084],[810000.0,0.9560050485098321],[840000.0,0.8366418431938384]],
    "user10":[[0.0,0.08699680697780535],[30000.0,-0.16966127386646698],[60000.0,-0.08061064545373212],[90000.0,-0.130768616421191],[120000.0,-0.07535822084871023],[150000.0,0.019816205516984056],[180000.0,0.005363090982011577],[210000.0,-0.06447646021240137],[240000.0,-0.06052015178145086],[270000.0,0.16729721841502684],[300000.0,0.14075207698969822],[330000.0,0.21498052660010783],[360000.0,0.014384923438619593],[390000.0,-0.053145863267358026],[420000.0,0.21086516227585791],[450000.0,-0.28521762304586556],[480000.0,0.22541609445799818],[510000.0,0.022599781872918934],[540000.0,-0.1332095968115649],[570000.0,-0.02085483390940495],[600000.0,0.16715543380891548],[630000.0,-0.37268299182738523],[660000.0,-0.11679634509291242],[690000.0,0.07857853330542695],[720000.0,0.059503168595019654],[750000.0,-0.0990360773694084],[780000.0,0.1350758466282169],[810000.0,0.0569938557332252],[840000.0,0.092096570611191]],
    "user01":[[0.0,0.916680022608137],[30000.0,1.1849034255815523],[60000.0,1.0839487740113423],[90000.0,1.139704042000673],[120000.0,1.0782703406264516],[150000.0,0.9803788449719405],[180000.0,0.9946512647153265],[210000.0,1.0666004704006076],[240000.0,1.0623890063856838],[270000.0,0.8459481426023309],[300000.0,0.8687046568756482],[330000.0,0.8065571464342477],[360000.0,0.9857180452490283],[390000.0,1.054583458890209],[420000.0,0.8098832623351917],[450000.0,1.3300514464752196],[480000.0,0.7981840297019352],[510000.0,0.9776536802109306],[540000.0,1.142489435380299],[570000.0,1.0210738155843475],[600000.0,0.846068093529917],[630000.0,1.4516240901850266],[660000.0,1.1238905205625527],[690000.0,0.9244294585797621],[720000.0,0.942232548033141],[750000.0,1.1041061320851444],[780000.0,0.8736496457951675],[810000.0,0.9445998732223096],[840000.0,0.9120170712462844]],
  },
  "rate":{
    "user00":[[0.0,0.35387810659004937],[30000.0,0.3776976752302891],[60000.0,0.3404802826913319],[90000.0,0.3723334691802495],[120000.0,0.3531183624724918],[150000.0,0.348298747314533],[180000.0,0.3511331062121281],[210000.0,0.3301590462854779],[240000.0,0.30433230951807644],[270000.0,0.2800619012743424],[300000.0,0.29160324932669474],[330000.0,0.31266974271896164],[360000.0,0.3561433916880537],[390000.0,0.30050282036783127],[420000.0,0.3290509304231904],[450000.0,0.36615509328057744],[480000.0,0.30361629651702143],[510000.0,0.3279156366895007],[540000.0,0.3728136465063139],[570000.0,0.3076519291533298],[600000.0,0.35186387663543695],[630000.0,0.42288715567001534],[660000.0,0.32469728885522686],[690000.0,0.3278378730211513],[720000.0,0.32804052304560544],[750000.0,0.32704410199337036],[780000.0,0.3589235484903799],[810000.0,0.3382305059168693],[840000.0,0.2872619469156681]],
    "user10":[[0.0,0.31452102626067313],[30000.0,0.2865477460511214],[60000.0,0.3625598361018091],[90000.0,0.33497391783814573],[120000.0,0.33256487144611113],[150000.0,0.29877782475572],[180000.0,0.31754067991389695],[210000.0,0.3192341278267743],[240000.0,0.3343334740615238],[270000.0,0.34392428649855594],[300000.0,0.34908317015203805],[330000.0,0.3403676528669787],[360000.0,0.3394567488353454],[390000.0,0.3023861920227848],[420000.0,0.3547182261265266],[450000.0,0.32659435454827873],[480000.0,0.30429097233013785],[510000.0,0.3276083823897592],[540000.0,0.33960229655992336],[570000.0,0.35165207417380595],[600000.0,0.31798638440331656],[630000.0,0.31164827325784666],[660000.0,0.3724494383233803],[690000.0,0.3166488158620053],[720000.0,0.3152740697870786],[750000.0,0.3818690708009575],[780000.0,0.2935676719471257],[810000.0,0.3288991694515961],[840000.0,0.37173016782856966]],
    "user01":[[0.0,0.3316008671492775],[30000.0,0.33575457871858955],[60000.0,0.296959881206859],[90000.0,0.2926926129816047],[120000.0,0.3143167660813971],[150000.0,0.35292342792974696],[180000.0,0.3313262138739749],[210000.0,0.3506068258877479],[240000.0,0.36133421642039976],[270000.0,0.3760138122271017],[300000.0,0.3593135805212673],[330000.0,0.34696260441405974],[360000.0,0.3043998594766009],[390000.0,0.3971109876093839],[420000.0,0.31623084345028313],[450000.0,0.3072505521711438],[480000.0,0.3920927311528407],[510000.0,0.34447598092074],[540000.0,0.28758405693376277],[570000.0,0.3406959966728642],[600000.0,0.33014973896124644],[630000.0,0.26546457107213806],[660000.0,0.30285327282139285],[690000.0,0.3555133111168434],[720000.0,0.35668540716731595],[750000.0,0.29108682720567214],[780000.0,0.34750877956249454],[810000.0,0.33287032463153454],[840000.0,0.3410078852557623]]
  }
}
let {sync,individual_sync_value,rate} = data

const offsetSum = 7
const offset = {
  "sync":2,
  "individual_sync_value":1,
  "rate":0
}

let sync_opt: EChartsOption = {
  xAxis: {
    type: 'time',
    axisLine:{
      show:true,
      onZero:true,
      lineStyle:{
        width:1.2,
        color:'#000'
      }
    },
  },
  yAxis: {
    id:'sync',
    name: 'sync',
    show: true,
    type: 'value',
    max:offsetSum-offset.sync,
    min:-offset.sync,
    axisLine:{
      show:true,
    },
    splitLine:{
      show:false // 不显示网格线
    },
    axisTick:{
      show:true
    },
    axisLabel:{
      formatter: (value: number, index: number) => value >= 3 || value <= -1 ? '' : value.toString()
    }
  },
  series: Object.keys(sync).map(e=>({
      name: e,
      type: 'line',
      smooth: true,
      yAxisId:'sync',
      symbol: 'none',
      data: sync[e],
      color:color[e], 
      sampling: 'lttb',
      zlevel:-99,
    })
  )
}


let individual_sync_value_opt: EChartsOption = {
  xAxis: {
    type: 'time',
    axisLine:{
      show:true,
      onZero:true,
      onZeroAxisIndex:1,
      lineStyle:{
        width:1.2,
        color:'#000'
      }
    },
  },
  yAxis:{
    id:'individual_sync_value',
    show: true,
    type: 'value',
    name: 'individual sync value',
    nameLocation: 'start',
    // min:-0.5,
    max:-offset.individual_sync_value,
    min:offsetSum-offset.individual_sync_value,
    axisLine:{
      show:true,
      symbol:['arrow','none'],
      symbolSize:[6, 8],
      symbolOffset:[0, 10]
    },
    splitLine:{
      show:false // 不显示网格线
    },
    axisTick:{
      show:true,
      inside:false
    },
    axisLabel:{
      formatter: (value: number, index: number) => value >= 3 || value <= -1 ? '' : value.toString()
    },
    inverse: true,      
  },
  series: Object.keys(individual_sync_value).map(e=>({
    name: e,
    type: 'line',
    smooth: false,
    yAxisId:'individual_sync_value',
    symbol: 'none',
    data: individual_sync_value[e],
    color:color[e], 
    sampling: 'lttb',
  
    zlevel:-99,
    markLine:{
      symbol:['none','arrow'],
      symbolSize:[4,10],
      data:individual_sync_value[e].map(i=>([{coord: [i[0],0]},{coord: [i[0], i[1]]}]))
    }
  })
),
}

let rate_opt: EChartsOption = {
  xAxis: {
    type: 'time',
    axisLine:{
      show:false,
    },
  },
  yAxis: {
    name: 'rate',
    nameLocation:'start',
    nameTextStyle:{
      align:'right',
      verticalAlign:'top',
      padding:[-12,20,0,0]
    },
    id:'rate',
    show: true,
    type: 'value',
    position:'left',
    max:offsetSum,
    min:offset.rate,
    axisLine:{
      show:true,
      onZero:true,
      onZeroAxisIndex:0,
      lineStyle:{
        width:1.2,
        color:'#000'
      }
    },
    splitLine:{
      show:false // 不显示网格线
    },
    axisTick:{
      show:true
    },
    axisLabel:{
      color:'#12aadd',
      fontWeight:'bold',
      formatter: (value: number, index: number) => value > 1 ? '' : value.toString()
    },
    offset:0
  },
  series: Object.keys(rate).map(e => ({
      name: e,
      type: 'line',
      yAxisId:'rate',
      smooth: true,
      symbol: 'none',
      data: rate[e],
      color:color[e],
      sampling: 'lttb',
      stack:"true",
      areaStyle: {
        opacity:0.75,
      },
      markLine:{
        symbol:['none','none'],
        data:[[{coord:[0,1]},{coord: [840000, 1]}]]
      }
    })
  )
}


export async function tb (meetingId:string,marks:Promise<any>) {
  const opt: EChartsOption = {
    grid: {
      top: 60,
      left: 100,
      right: 100,
      bottom: 60
    },
    tooltip: {},
    legend: {
      data: Object.keys(sync)
    },
    xAxis:[
      sync_opt.xAxis as XAXisComponentOption,
      individual_sync_value_opt.xAxis as XAXisComponentOption,
      rate_opt.xAxis as XAXisComponentOption
    ],
    yAxis:[
      sync_opt.yAxis as YAXisComponentOption,
      individual_sync_value_opt.yAxis as YAXisComponentOption,
      rate_opt.yAxis as YAXisComponentOption
    ],
    series:[
      ...sync_opt.series as LinesSeriesOption[],
      ...individual_sync_value_opt.series as LinesSeriesOption[],
      ...rate_opt.series as LinesSeriesOption[]
    ],
  }
  return opt
}